"use strict";
// @amaurymartiny/now-middleware
// Copyright (C) 2020 Amaury Martiny
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Combine multiple middleware together.
 *
 * @param middlewares - Functions of form: `function(req, res, next) { ... }`, aka
 * express middlewares.
 *
 * @return - Single combined middleware
 */
function combineMiddleware(middlewares) {
    return middlewares.reduce(function (acc, mid) {
        return function (req, res, next) {
            acc(req, res, function (err) {
                if (err) {
                    return next(err);
                }
                mid(req, res, next);
            });
        };
    });
}
/**
 * Chain middlewares together, and expose them to be consumed by a `@now/node`
 * serverless function.
 *
 * @param middlewares - Functions of form: `function(req, res, next) { ... }`, aka
 * express middlewares.
 */
function chain() {
    var middlewares = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        middlewares[_i] = arguments[_i];
    }
    return function (fn) {
        return function (req, res) {
            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore
            // @ts-ignore Need to cast (and verify everything works) from a
            // express.Request to a NowRequest
            return combineMiddleware(middlewares)(req, res, function () {
                fn(req, res);
            });
        };
    };
}
exports.chain = chain;
