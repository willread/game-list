{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport async function fetchUser(cookie = '') {\n  if (false && window.__user) {\n    return window.__user;\n  }\n\n  const res = await fetch('/api/me', cookie ? {\n    headers: {\n      cookie\n    }\n  } : {});\n\n  if (!res.ok) {\n    delete window.__user;\n    return null;\n  }\n\n  const json = await res.json();\n\n  if (false) {\n    window.__user = json;\n  }\n\n  return json;\n}\nexport function useFetchUser({\n  required\n} = {}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(() => !(false && window.__user));\n  const {\n    0: user,\n    1: setUser\n  } = useState(() => {\n    if (true) {\n      return null;\n    }\n\n    return window.__user || null;\n  });\n  useEffect(() => {\n    if (!loading && user) {\n      return;\n    }\n\n    setLoading(true);\n    let isMounted = true;\n    fetchUser().then(user => {\n      // Only set the user if the component is still mounted\n      if (isMounted) {\n        // When the user is not logged in but login is required\n        if (required && !user) {\n          window.location.href = '/api/login';\n          return;\n        }\n\n        setUser(user);\n        setLoading(false);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return {\n    user,\n    loading\n  };\n}","map":{"version":3,"sources":["/Users/will/Documents/list/lib/user.js"],"names":["useState","useEffect","fetch","fetchUser","cookie","window","__user","res","headers","ok","json","useFetchUser","required","loading","setLoading","user","setUser","isMounted","then","location","href"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,eAAeC,SAAf,CAAyBC,MAAM,GAAG,EAAlC,EAAsC;AAC3C,MAAI,SAAiCC,MAAM,CAACC,MAA5C,EAAoD;AAClD,WAAOD,MAAM,CAACC,MAAd;AACD;;AAED,QAAMC,GAAG,GAAG,MAAML,KAAK,CACrB,SADqB,EAErBE,MAAM,GACF;AACEI,IAAAA,OAAO,EAAE;AACPJ,MAAAA;AADO;AADX,GADE,GAMF,EARiB,CAAvB;;AAWA,MAAI,CAACG,GAAG,CAACE,EAAT,EAAa;AACX,WAAOJ,MAAM,CAACC,MAAd;AACA,WAAO,IAAP;AACD;;AAED,QAAMI,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAJ,EAAnB;;AACA,aAAmC;AACjCL,IAAAA,MAAM,CAACC,MAAP,GAAgBI,IAAhB;AACD;;AACD,SAAOA,IAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,IAAe,EAArC,EAAyC;AAC9C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CACpC,MAAM,EAAE,SAAiCK,MAAM,CAACC,MAA1C,CAD8B,CAAtC;AAGA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,CAAC,MAAM;AACrC,cAAmC;AACjC,aAAO,IAAP;AACD;;AAED,WAAOK,MAAM,CAACC,MAAP,IAAiB,IAAxB;AACD,GAN+B,CAAhC;AAQAL,EAAAA,SAAS,CACP,MAAM;AACJ,QAAI,CAACY,OAAD,IAAYE,IAAhB,EAAsB;AACpB;AACD;;AACDD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIG,SAAS,GAAG,IAAhB;AAEAd,IAAAA,SAAS,GAAGe,IAAZ,CAAiBH,IAAI,IAAI;AACvB;AACA,UAAIE,SAAJ,EAAe;AACb;AACA,YAAIL,QAAQ,IAAI,CAACG,IAAjB,EAAuB;AACrBV,UAAAA,MAAM,CAACc,QAAP,CAAgBC,IAAhB,GAAuB,YAAvB;AACA;AACD;;AACDJ,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAXD;AAaA,WAAO,MAAM;AACXG,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GAxBM,EAyBP;AACA,IA1BO,CAAT;AA6BA,SAAO;AAAEF,IAAAA,IAAF;AAAQF,IAAAA;AAAR,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react'\nimport fetch from 'isomorphic-unfetch'\n\nexport async function fetchUser(cookie = '') {\n  if (typeof window !== 'undefined' && window.__user) {\n    return window.__user\n  }\n\n  const res = await fetch(\n    '/api/me',\n    cookie\n      ? {\n          headers: {\n            cookie,\n          },\n        }\n      : {}\n  )\n\n  if (!res.ok) {\n    delete window.__user\n    return null\n  }\n\n  const json = await res.json()\n  if (typeof window !== 'undefined') {\n    window.__user = json\n  }\n  return json\n}\n\nexport function useFetchUser({ required } = {}) {\n  const [loading, setLoading] = useState(\n    () => !(typeof window !== 'undefined' && window.__user)\n  )\n  const [user, setUser] = useState(() => {\n    if (typeof window === 'undefined') {\n      return null\n    }\n\n    return window.__user || null\n  })\n\n  useEffect(\n    () => {\n      if (!loading && user) {\n        return\n      }\n      setLoading(true)\n      let isMounted = true\n\n      fetchUser().then(user => {\n        // Only set the user if the component is still mounted\n        if (isMounted) {\n          // When the user is not logged in but login is required\n          if (required && !user) {\n            window.location.href = '/api/login'\n            return\n          }\n          setUser(user)\n          setLoading(false)\n        }\n      })\n\n      return () => {\n        isMounted = false\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  )\n\n  return { user, loading }\n}"]},"metadata":{},"sourceType":"module"}