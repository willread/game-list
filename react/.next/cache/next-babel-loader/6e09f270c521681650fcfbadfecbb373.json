{"ast":null,"code":"var _jsxFileName = \"/Users/will/Documents/list/pages/users/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/layout';\nimport { useFetchUser } from '../../lib/user';\n\nconst fetcher = url => fetch(url).then(async r => await r.json());\n\nfunction User() {\n  const {\n    user,\n    loading\n  } = useFetchUser();\n  const {\n    data,\n    error\n  } = useSWR('/api/list', fetcher);\n  return __jsx(Layout, {\n    user: user,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, data ? data.games.join(', ') : 'loading');\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/will/Documents/list/pages/users/[id].js"],"names":["React","useSWR","fetch","Layout","useFetchUser","fetcher","url","then","r","json","User","user","loading","data","error","games","join"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,OAAO,GAAGC,GAAG,IAAIJ,KAAK,CAACI,GAAD,CAAL,CAAWC,IAAX,CAAgB,MAAMC,CAAN,IAAW,MAAMA,CAAC,CAACC,IAAF,EAAjC,CAAvB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBR,YAAY,EAAtC;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBb,MAAM,CAAC,WAAD,EAAcI,OAAd,CAA9B;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEM,IAAd;AAAoB,IAAA,OAAO,EAAEC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,IAAI,GAAGA,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAH,GAA2B,SADnC,CADF;AAKD;;AAED,eAAeN,IAAf","sourcesContent":["\nimport React from 'react'\nimport useSWR from 'swr'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../components/layout'\nimport { useFetchUser } from '../../lib/user'\n\nconst fetcher = url => fetch(url).then(async r => await r.json())\n\nfunction User() {\n  const { user, loading } = useFetchUser()\n  const { data, error } = useSWR('/api/list', fetcher)\n\n  return (\n    <Layout user={user} loading={loading}>\n      { data ? data.games.join(', ') : 'loading' }\n    </Layout>\n  )\n}\n\nexport default User"]},"metadata":{},"sourceType":"module"}