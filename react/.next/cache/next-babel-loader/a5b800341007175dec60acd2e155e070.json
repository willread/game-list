{"ast":null,"code":"var _jsxFileName = \"/Users/will/Documents/list/pages/users/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/layout';\nimport { useFetchUser } from '../../lib/user';\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n};\n\nfunction User() {\n  var _useFetchUser = useFetchUser(),\n      user = _useFetchUser.user,\n      loading = _useFetchUser.loading;\n\n  var _useSWR = useSWR('/api/list', fetcher),\n      foo = _useSWR.foo;\n\n  return __jsx(Layout, {\n    user: user,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, foo, foo ? 'foo' : 'loading');\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/will/Documents/list/pages/users/[id].js"],"names":["React","useSWR","fetch","Layout","useFetchUser","fetcher","url","then","r","json","User","user","loading","foo"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG;AAAA,SAAIJ,KAAK,CAACI,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAJ;AAAA,CAAnB;;AAEA,SAASC,IAAT,GAAgB;AAAA,sBACYN,YAAY,EADxB;AAAA,MACNO,IADM,iBACNA,IADM;AAAA,MACAC,OADA,iBACAA,OADA;;AAAA,gBAEEX,MAAM,CAAC,WAAD,EAAcI,OAAd,CAFR;AAAA,MAENQ,GAFM,WAENA,GAFM;;AAId,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,IAAd;AAAoB,IAAA,OAAO,EAAEC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,GADJ,EAEIA,GAAG,GAAG,KAAH,GAAW,SAFlB,CADF;AAMD;;AAED,eAAeH,IAAf","sourcesContent":["\nimport React from 'react'\nimport useSWR from 'swr'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../components/layout'\nimport { useFetchUser } from '../../lib/user'\n\nconst fetcher = url => fetch(url).then(r => r.json())\n\nfunction User() {\n  const { user, loading } = useFetchUser()\n  const { foo } = useSWR('/api/list', fetcher)\n\n  return (\n    <Layout user={user} loading={loading}>\n      { foo }\n      { foo ? 'foo' : 'loading' }\n    </Layout>\n  )\n}\n\nexport default User"]},"metadata":{},"sourceType":"module"}