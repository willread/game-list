{"ast":null,"code":"var _jsxFileName = \"/Users/will/Documents/list/pages/users/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/layout';\nimport { useFetchUser } from '../../lib/user';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nfunction User() {\n  const {\n    user,\n    loading\n  } = useFetchUser();\n  const {\n    list,\n    error\n  } = useSWR('/api/list', fetcher);\n  return __jsx(Layout, {\n    user: user,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, list, list ? 'list' : 'loading', error ? 'error' : 'no error');\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/will/Documents/list/pages/users/[id].js"],"names":["React","useSWR","fetch","Layout","useFetchUser","fetcher","url","then","r","json","User","user","loading","list","error"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOJ,KAAK,CAACI,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,SAASC,IAAT,GAAgB;AACd,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBR,YAAY,EAAtC;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBb,MAAM,CAAC,WAAD,EAAcI,OAAd,CAA9B;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEM,IAAd;AAAoB,IAAA,OAAO,EAAEC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,IADJ,EAEIA,IAAI,GAAG,MAAH,GAAY,SAFpB,EAGIC,KAAK,GAAG,OAAH,GAAY,UAHrB,CADF;AAOD;;AAED,eAAeJ,IAAf","sourcesContent":["\nimport React from 'react'\nimport useSWR from 'swr'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../components/layout'\nimport { useFetchUser } from '../../lib/user'\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nfunction User() {\n  const { user, loading } = useFetchUser()\n  const { list, error } = useSWR('/api/list', fetcher)\n\n  return (\n    <Layout user={user} loading={loading}>\n      { list }\n      { list ? 'list' : 'loading' }\n      { error ? 'error': 'no error' }\n    </Layout>\n  )\n}\n\nexport default User"]},"metadata":{},"sourceType":"module"}